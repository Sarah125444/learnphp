<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta http-equiv="X-UA-Compatible" content="ie=edge">
  <title>Document</title>
</head>
<body>

  请求响应流程：
  1 用户打开浏览器
  2 地址栏输入我们需要访问的网站网址（URL）
  3 浏览器通过DNS服务器获取即将访问的网站IP地址
  4 浏览器发起一个对这个IP的请求
  5 服务端接受到这个请求后，进行相应的处理
  6 服务端将处理完后的结果返回给客户端浏览器
  7 浏览器将服务端返回的结果呈现到界面上

  浏览器
  1.用户在浏览器中输入URL地址
  2.浏览器解析用户输入的URL地址 => 域名+端口 
  3.浏览器会先检查本地缓存中有没有这个域名 => IP
  4.浏览器发起一个DNS系统调用 => 
  5.浏览器会通过本地的随机端口建立一个于服务端指定端口之间的连接通道
  6.浏览器会将客户端的一些信息打上一个"包"
  7.将这个"包"通过这个连接通道发送到服务端
  8.打开服务端返回给过来的”包“，找到Content-Type
  9.根据Content-Type决定如何处理响应的内容
  10.如果是HTML则渲染到界面上

  浏览器到服务器：请求报文
  服务器到浏览器：响应报文
  
  服务器 web server
  1.打开客户端提交过来的“包”， 拿到包里面的请求路径
  2.根据请求的路径对应文件的扩展名找到文件的类型MIME Type 
  3.判断文件类型是否为静态文件 
  4.如果是静态文件则直接读取这个文件的内容
  5.如果不是静态文件则直接交给“外包公司”
  6.服务端会把要发给客户端的数据打上一个包
  7.将这个包在通过之前的连接通道发回给客户端


  DocumentRoot
  1.html
  2.php   => 1.读取php文件中的内容 2.执行代码 3.将执行结果返回给webserver


  DNS系统调用
  1.检查操作系统缓存有没有这个域名
  2.找系统的hosts文件中有没有这个域名
  3.如果都没有找到，会对DNS服务器发起一个系统调用

  DNS 服务器
  找到对应的域名

  三次握手是为了确认连接
  打开页面时的四个步骤：
  1.客户端通过随机端口与服务端某个固定端口（一般为80）建立连接 3次握手
  2.客户端通过这个连接发送请求到服务端（这里的请求是名词）
  3.服务端监听端口得到的客户端发送过来的请求
  4.服务端通过连接响应给客户端状态和内容（响应报文）

  字面量是代码中数据的表述手段
  JSON是一种类似与js字面量的手段
  也是表述数据的手段
  现如今用的最多的数据格式


  json当中属性名称必须用双引号引起来
  json中字符串必须用双引号
  json中不允许使用注释
  json中没有undefined这个值

  json不是数据的存储手段是数据的表述手段

</body>
</html>